class Solution:
    def threeSum(self, nums):
        if len(nums)<3:
            return []
        nums.sort()
        res = []
        l = len(nums)
        for i in range(l):
            if i == 0 or nums[i] > nums[i-1]:       #nums[i] > nums[i-1]这个比较是为了去重，跳过相同的nums[i]
                j = i + 1
                k = l - 1
                while j < k:
                    temp = nums[i]+ nums[j]+ nums[k]
                    if temp == 0:
                        res.append([nums[i],nums[j],nums[k]])
                        j = j + 1                  #为下面去重做准备，nums[j]和nums[i]是可以相同的，而相邻的两个nums[j]不能相同。如果没有这一步，
                                                   #此时j - 1 = i，下面while循环的第一步将会是nums[j]和nums[j-1]也就是nums[i]相比较，就将会出错
                        k = k - 1                  #k与j同理
                        while j < k and nums[j] == nums[j-1]:         #去重，跳过相同的nums[j]
                            j = j + 1
                        while j < k and nums[k] == nums[k+1]:         #去重，跳过相同的nums[k]
                            k = k - 1
                    elif temp > 0:
                        k = k - 1
                    else:
                        j = j + 1
        return res
